{"ast":null,"code":"var _jsxFileName = \"C:\\\\Universidad\\\\proyectos\\\\Calculadora-ALG-2-\\\\src\\\\components\\\\Interpolation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Interpolation = () => {\n  _s();\n  const [method, setMethod] = useState('newton');\n  const [points, setPoints] = useState([{\n    x: 0,\n    y: 1\n  }, {\n    x: 1,\n    y: 4\n  }, {\n    x: 2,\n    y: 9\n  }]);\n  const [result, setResult] = useState(null);\n  const handlePointChange = (index, field, value) => {\n    const newPoints = [...points];\n    newPoints[index][field] = parseFloat(value) || 0;\n    setPoints(newPoints);\n  };\n  const addPoint = () => {\n    setPoints([...points, {\n      x: 0,\n      y: 0\n    }]);\n  };\n  const removePoint = index => {\n    if (points.length > 2) {\n      const newPoints = points.filter((_, i) => i !== index);\n      setPoints(newPoints);\n    }\n  };\n  const calculateInterpolation = () => {\n    try {\n      if (method === 'newton') {\n        setResult(newtonDividedDifferences());\n      } else {\n        setResult(leastSquares());\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const newtonDividedDifferences = () => {\n    const n = points.length;\n    const dividedDiff = [...Array(n)].map(() => Array(n).fill(0));\n    for (let i = 0; i < n; i++) {\n      dividedDiff[i][0] = points[i].y;\n    }\n    for (let j = 1; j < n; j++) {\n      for (let i = 0; i < n - j; i++) {\n        dividedDiff[i][j] = (dividedDiff[i + 1][j - 1] - dividedDiff[i][j - 1]) / (points[i + j].x - points[i].x);\n      }\n    }\n    let polynomial = dividedDiff[0][0].toString();\n    let term = '';\n    for (let i = 1; i < n; i++) {\n      term += `(x - ${points[i - 1].x})`;\n      polynomial += ` + ${dividedDiff[0][i]}${term}`;\n    }\n    return {\n      method: 'Diferencias Divididas de Newton',\n      polynomial,\n      coefficients: dividedDiff[0],\n      points: [...points]\n    };\n  };\n  const leastSquares = () => {\n    const n = points.length;\n    const degree = Math.min(3, n - 1);\n    const X = points.map(p => {\n      const row = [];\n      for (let i = 0; i <= degree; i++) {\n        row.push(Math.pow(p.x, i));\n      }\n      return row;\n    });\n    const y = points.map(p => p.y);\n    const XtX = [...Array(degree + 1)].map(() => Array(degree + 1).fill(0));\n    const Xty = Array(degree + 1).fill(0);\n    for (let i = 0; i <= degree; i++) {\n      for (let j = 0; j <= degree; j++) {\n        XtX[i][j] = points.reduce((sum, p, k) => sum + X[k][i] * X[k][j], 0);\n      }\n      Xty[i] = points.reduce((sum, p, k) => sum + X[k][i] * y[k], 0);\n    }\n    const coefficients = gaussianElimination(XtX, Xty);\n    let polynomial = coefficients.map((c, i) => {\n      return `${c.toFixed(4)}${i > 0 ? `x^${i}` : ''}`;\n    }).join(' + ');\n    return {\n      method: 'MÃ­nimos Cuadrados',\n      polynomial,\n      coefficients,\n      points: [...points],\n      degree\n    };\n  };\n  const gaussianElimination = (matrix, vector) => {\n    const n = matrix.length;\n    for (let i = 0; i < n; i++) {\n      let maxRow = i;\n      for (let j = i + 1; j < n; j++) {\n        if (Math.abs(matrix[j][i]) > Math.abs(matrix[maxRow][i])) {\n          maxRow = j;\n        }\n      }\n      [matrix[i], matrix[maxRow]] = [matrix[maxRow], matrix[i]];\n      [vector[i], vector[maxRow]] = [vector[maxRow], vector[i]];\n      for (let j = i + 1; j < n; j++) {\n        const factor = matrix[j][i] / matrix[i][i];\n        for (let k = i; k < n; k++) {\n          matrix[j][k] -= factor * matrix[i][k];\n        }\n        vector[j] -= factor * vector[i];\n      }\n    }\n    const solution = Array(n).fill(0);\n    for (let i = n - 1; i >= 0; i--) {\n      solution[i] = vector[i];\n      for (let j = i + 1; j < n; j++) {\n        solution[i] -= matrix[i][j] * solution[j];\n      }\n      solution[i] /= matrix[i][i];\n    }\n    return solution;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 p-6 rounded-xl shadow-md text-white relative z-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-4 text-purple-400\",\n      children: \"Interpolaci\\xF3n Polinomial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-300 mb-2\",\n          children: \"M\\xE9todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: method,\n          onChange: e => setMethod(e.target.value),\n          className: \"w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"newton\",\n            children: \"Diferencias Divididas (Newton)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"leastSquares\",\n            children: \"M\\xEDnimos Cuadrados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addPoint,\n          className: \"mt-6 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\",\n          children: \"A\\xF1adir Punto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-300 mb-2\",\n        children: \"Puntos (x, y)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: points.map((point, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: point.x,\n            onChange: e => handlePointChange(index, 'x', e.target.value),\n            className: \"w-20 px-2 py-1 bg-gray-700 border border-gray-600 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: point.y,\n            onChange: e => handlePointChange(index, 'y', e.target.value),\n            className: \"w-20 px-2 py-1 bg-gray-700 border border-gray-600 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removePoint(index),\n            className: \"px-2 py-1 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\",\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculateInterpolation,\n      className: \"px-6 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors\",\n      children: \"Calcular Interpolaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-gray-700 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-lg font-semibold mb-2 text-purple-400\",\n        children: \"Resultados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2\",\n        children: [\"M\\xE9todo: \", result.method]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2\",\n        children: [\"Polinomio: \", result.polynomial]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), result.coefficients && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-medium mb-1\",\n          children: \"Coeficientes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 md:grid-cols-4 gap-2\",\n          children: result.coefficients.map((coef, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-2 rounded\",\n            children: [\"a\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: i\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 22\n            }, this), \" = \", coef.toFixed(6)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-gray-700 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium text-purple-400 mb-2\",\n        children: \"Explicaci\\xF3n del M\\xE9todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300\",\n        children: method === 'newton' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"El m\\xE9todo de diferencias divididas de Newton construye un polinomio que pasa exactamente por todos los puntos dados. Es \\xFAtil cuando se tienen pocos puntos y se requiere precisi\\xF3n.\"\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"El m\\xE9todo de m\\xEDnimos cuadrados encuentra el polinomio que mejor ajusta a los puntos en el sentido de minimizar la suma de los cuadrados de los errores. Ideal para datos con ruido.\"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(Interpolation, \"kmrew5cakYHupTprgctzaViWA4s=\");\n_c = Interpolation;\nexport default Interpolation;\nvar _c;\n$RefreshReg$(_c, \"Interpolation\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Interpolation","_s","method","setMethod","points","setPoints","x","y","result","setResult","handlePointChange","index","field","value","newPoints","parseFloat","addPoint","removePoint","length","filter","_","i","calculateInterpolation","newtonDividedDifferences","leastSquares","error","alert","message","n","dividedDiff","Array","map","fill","j","polynomial","toString","term","coefficients","degree","Math","min","X","p","row","push","pow","XtX","Xty","reduce","sum","k","gaussianElimination","c","toFixed","join","matrix","vector","maxRow","abs","factor","solution","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","onClick","point","type","coef","_c","$RefreshReg$"],"sources":["C:/Universidad/proyectos/Calculadora-ALG-2-/src/components/Interpolation.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Interpolation = () => {\n  const [method, setMethod] = useState('newton');\n  const [points, setPoints] = useState([\n    {x: 0, y: 1}, \n    {x: 1, y: 4}, \n    {x: 2, y: 9}\n  ]);\n  const [result, setResult] = useState(null);\n\n  const handlePointChange = (index, field, value) => {\n    const newPoints = [...points];\n    newPoints[index][field] = parseFloat(value) || 0;\n    setPoints(newPoints);\n  };\n\n  const addPoint = () => {\n    setPoints([...points, {x: 0, y: 0}]);\n  };\n\n  const removePoint = (index) => {\n    if (points.length > 2) {\n      const newPoints = points.filter((_, i) => i !== index);\n      setPoints(newPoints);\n    }\n  };\n\n  const calculateInterpolation = () => {\n    try {\n      if (method === 'newton') {\n        setResult(newtonDividedDifferences());\n      } else {\n        setResult(leastSquares());\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const newtonDividedDifferences = () => {\n    const n = points.length;\n    const dividedDiff = [...Array(n)].map(() => Array(n).fill(0));\n    \n    for (let i = 0; i < n; i++) {\n      dividedDiff[i][0] = points[i].y;\n    }\n    \n    for (let j = 1; j < n; j++) {\n      for (let i = 0; i < n - j; i++) {\n        dividedDiff[i][j] = (dividedDiff[i+1][j-1] - dividedDiff[i][j-1]) / \n                          (points[i+j].x - points[i].x);\n      }\n    }\n    \n    let polynomial = dividedDiff[0][0].toString();\n    let term = '';\n    \n    for (let i = 1; i < n; i++) {\n      term += `(x - ${points[i-1].x})`;\n      polynomial += ` + ${dividedDiff[0][i]}${term}`;\n    }\n    \n    return {\n      method: 'Diferencias Divididas de Newton',\n      polynomial,\n      coefficients: dividedDiff[0],\n      points: [...points]\n    };\n  };\n\n  const leastSquares = () => {\n    const n = points.length;\n    const degree = Math.min(3, n - 1);\n    \n    const X = points.map(p => {\n      const row = [];\n      for (let i = 0; i <= degree; i++) {\n        row.push(Math.pow(p.x, i));\n      }\n      return row;\n    });\n    \n    const y = points.map(p => p.y);\n    \n    const XtX = [...Array(degree + 1)].map(() => Array(degree + 1).fill(0));\n    const Xty = Array(degree + 1).fill(0);\n    \n    for (let i = 0; i <= degree; i++) {\n      for (let j = 0; j <= degree; j++) {\n        XtX[i][j] = points.reduce((sum, p, k) => sum + X[k][i] * X[k][j], 0);\n      }\n      Xty[i] = points.reduce((sum, p, k) => sum + X[k][i] * y[k], 0);\n    }\n    \n    const coefficients = gaussianElimination(XtX, Xty);\n    \n    let polynomial = coefficients.map((c, i) => {\n      return `${c.toFixed(4)}${i > 0 ? `x^${i}` : ''}`;\n    }).join(' + ');\n    \n    return {\n      method: 'MÃ­nimos Cuadrados',\n      polynomial,\n      coefficients,\n      points: [...points],\n      degree\n    };\n  };\n\n  const gaussianElimination = (matrix, vector) => {\n    const n = matrix.length;\n    for (let i = 0; i < n; i++) {\n      let maxRow = i;\n      for (let j = i + 1; j < n; j++) {\n        if (Math.abs(matrix[j][i]) > Math.abs(matrix[maxRow][i])) {\n          maxRow = j;\n        }\n      }\n      [matrix[i], matrix[maxRow]] = [matrix[maxRow], matrix[i]];\n      [vector[i], vector[maxRow]] = [vector[maxRow], vector[i]];\n      \n      for (let j = i + 1; j < n; j++) {\n        const factor = matrix[j][i] / matrix[i][i];\n        for (let k = i; k < n; k++) {\n          matrix[j][k] -= factor * matrix[i][k];\n        }\n        vector[j] -= factor * vector[i];\n      }\n    }\n    \n    const solution = Array(n).fill(0);\n    for (let i = n - 1; i >= 0; i--) {\n      solution[i] = vector[i];\n      for (let j = i + 1; j < n; j++) {\n        solution[i] -= matrix[i][j] * solution[j];\n      }\n      solution[i] /= matrix[i][i];\n    }\n    \n    return solution;\n  };\n\n  return (\n    <div className=\"bg-gray-800 p-6 rounded-xl shadow-md text-white relative z-10\">\n      <h3 className=\"text-xl font-semibold mb-4 text-purple-400\">InterpolaciÃ³n Polinomial</h3>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n        <div>\n          <label className=\"block text-gray-300 mb-2\">MÃ©todo</label>\n          <select\n            value={method}\n            onChange={(e) => setMethod(e.target.value)}\n            className=\"w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\n          >\n            <option value=\"newton\">Diferencias Divididas (Newton)</option>\n            <option value=\"leastSquares\">MÃ­nimos Cuadrados</option>\n          </select>\n        </div>\n        <div>\n          <button\n            onClick={addPoint}\n            className=\"mt-6 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n          >\n            AÃ±adir Punto\n          </button>\n        </div>\n      </div>\n\n      <div className=\"mb-4\">\n        <label className=\"block text-gray-300 mb-2\">Puntos (x, y)</label>\n        <div className=\"space-y-2\">\n          {points.map((point, index) => (\n            <div key={index} className=\"flex items-center space-x-2\">\n              <input\n                type=\"number\"\n                value={point.x}\n                onChange={(e) => handlePointChange(index, 'x', e.target.value)}\n                className=\"w-20 px-2 py-1 bg-gray-700 border border-gray-600 rounded\"\n              />\n              <input\n                type=\"number\"\n                value={point.y}\n                onChange={(e) => handlePointChange(index, 'y', e.target.value)}\n                className=\"w-20 px-2 py-1 bg-gray-700 border border-gray-600 rounded\"\n              />\n              <button\n                onClick={() => removePoint(index)}\n                className=\"px-2 py-1 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n              >\n                Eliminar\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <button\n        onClick={calculateInterpolation}\n        className=\"px-6 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors\"\n      >\n        Calcular InterpolaciÃ³n\n      </button>\n\n      {result && (\n        <div className=\"mt-6 p-4 bg-gray-700 rounded-lg\">\n          <h4 className=\"text-lg font-semibold mb-2 text-purple-400\">Resultados:</h4>\n          <p className=\"mb-2\">MÃ©todo: {result.method}</p>\n          <p className=\"mb-2\">Polinomio: {result.polynomial}</p>\n          \n          {result.coefficients && (\n            <div className=\"mt-2\">\n              <p className=\"font-medium mb-1\">Coeficientes:</p>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n                {result.coefficients.map((coef, i) => (\n                  <div key={i} className=\"bg-gray-800 p-2 rounded\">\n                    a<sub>{i}</sub> = {coef.toFixed(6)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      <div className=\"mt-6 p-4 bg-gray-700 rounded-lg\">\n        <h4 className=\"font-medium text-purple-400 mb-2\">ExplicaciÃ³n del MÃ©todo</h4>\n        <p className=\"text-gray-300\">\n          {method === 'newton' ? (\n            <>\n              El mÃ©todo de diferencias divididas de Newton construye un polinomio que pasa exactamente\n              por todos los puntos dados. Es Ãºtil cuando se tienen pocos puntos y se requiere precisiÃ³n.\n            </>\n          ) : (\n            <>\n              El mÃ©todo de mÃ­nimos cuadrados encuentra el polinomio que mejor ajusta a los puntos en el\n              sentido de minimizar la suma de los cuadrados de los errores. Ideal para datos con ruido.\n            </>\n          )}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Interpolation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}