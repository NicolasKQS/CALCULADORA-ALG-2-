{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Interpolation=()=>{const[method,setMethod]=useState('newton');const[points,setPoints]=useState([{x:0,y:1},{x:1,y:4},{x:2,y:9}]);const[result,setResult]=useState(null);const handlePointChange=(index,field,value)=>{const newPoints=[...points];newPoints[index][field]=parseFloat(value)||0;setPoints(newPoints);};const addPoint=()=>{setPoints([...points,{x:0,y:0}]);};const removePoint=index=>{if(points.length>2){const newPoints=points.filter((_,i)=>i!==index);setPoints(newPoints);}};const calculateInterpolation=()=>{try{if(method==='newton'){setResult(newtonDividedDifferences());}else{setResult(leastSquares());}}catch(error){alert(error.message);}};const newtonDividedDifferences=()=>{const n=points.length;const dividedDiff=[...Array(n)].map(()=>Array(n).fill(0));for(let i=0;i<n;i++){dividedDiff[i][0]=points[i].y;}for(let j=1;j<n;j++){for(let i=0;i<n-j;i++){dividedDiff[i][j]=(dividedDiff[i+1][j-1]-dividedDiff[i][j-1])/(points[i+j].x-points[i].x);}}let polynomial=dividedDiff[0][0].toString();let term='';for(let i=1;i<n;i++){term+=\"(x - \".concat(points[i-1].x,\")\");polynomial+=\" + \".concat(dividedDiff[0][i]).concat(term);}return{method:'Diferencias Divididas de Newton',polynomial,coefficients:dividedDiff[0],points:[...points]};};const leastSquares=()=>{const n=points.length;const degree=Math.min(3,n-1);const X=points.map(p=>{const row=[];for(let i=0;i<=degree;i++){row.push(Math.pow(p.x,i));}return row;});const y=points.map(p=>p.y);const XtX=[...Array(degree+1)].map(()=>Array(degree+1).fill(0));const Xty=Array(degree+1).fill(0);for(let i=0;i<=degree;i++){for(let j=0;j<=degree;j++){XtX[i][j]=points.reduce((sum,p,k)=>sum+X[k][i]*X[k][j],0);}Xty[i]=points.reduce((sum,p,k)=>sum+X[k][i]*y[k],0);}const coefficients=gaussianElimination(XtX,Xty);let polynomial=coefficients.map((c,i)=>{return\"\".concat(c.toFixed(4)).concat(i>0?\"x^\".concat(i):'');}).join(' + ');return{method:'MÃ­nimos Cuadrados',polynomial,coefficients,points:[...points],degree};};const gaussianElimination=(matrix,vector)=>{const n=matrix.length;for(let i=0;i<n;i++){let maxRow=i;for(let j=i+1;j<n;j++){if(Math.abs(matrix[j][i])>Math.abs(matrix[maxRow][i])){maxRow=j;}}[matrix[i],matrix[maxRow]]=[matrix[maxRow],matrix[i]];[vector[i],vector[maxRow]]=[vector[maxRow],vector[i]];for(let j=i+1;j<n;j++){const factor=matrix[j][i]/matrix[i][i];for(let k=i;k<n;k++){matrix[j][k]-=factor*matrix[i][k];}vector[j]-=factor*vector[i];}}const solution=Array(n).fill(0);for(let i=n-1;i>=0;i--){solution[i]=vector[i];for(let j=i+1;j<n;j++){solution[i]-=matrix[i][j]*solution[j];}solution[i]/=matrix[i][i];}return solution;};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-6 rounded-xl shadow-md text-white relative z-10\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mb-4 text-purple-400\",children:\"Interpolaci\\xF3n Polinomial\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-300 mb-2\",children:\"M\\xE9todo\"}),/*#__PURE__*/_jsxs(\"select\",{value:method,onChange:e=>setMethod(e.target.value),className:\"w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"newton\",children:\"Diferencias Divididas (Newton)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"leastSquares\",children:\"M\\xEDnimos Cuadrados\"})]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:addPoint,className:\"mt-6 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\",children:\"A\\xF1adir Punto\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-300 mb-2\",children:\"Puntos (x, y)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:points.map((point,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:point.x,onChange:e=>handlePointChange(index,'x',e.target.value),className:\"w-20 px-2 py-1 bg-gray-700 border border-gray-600 rounded\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:point.y,onChange:e=>handlePointChange(index,'y',e.target.value),className:\"w-20 px-2 py-1 bg-gray-700 border border-gray-600 rounded\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removePoint(index),className:\"px-2 py-1 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\",children:\"Eliminar\"})]},index))})]}),/*#__PURE__*/_jsx(\"button\",{onClick:calculateInterpolation,className:\"px-6 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors\",children:\"Calcular Interpolaci\\xF3n\"}),result&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-gray-700 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold mb-2 text-purple-400\",children:\"Resultados:\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"mb-2\",children:[\"M\\xE9todo: \",result.method]}),/*#__PURE__*/_jsxs(\"p\",{className:\"mb-2\",children:[\"Polinomio: \",result.polynomial]}),result.coefficients&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-medium mb-1\",children:\"Coeficientes:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 md:grid-cols-4 gap-2\",children:result.coefficients.map((coef,i)=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-2 rounded\",children:[\"a\",/*#__PURE__*/_jsx(\"sub\",{children:i}),\" = \",coef.toFixed(6)]},i))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-gray-700 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-purple-400 mb-2\",children:\"Explicaci\\xF3n del M\\xE9todo\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-300\",children:method==='newton'?/*#__PURE__*/_jsx(_Fragment,{children:\"El m\\xE9todo de diferencias divididas de Newton construye un polinomio que pasa exactamente por todos los puntos dados. Es \\xFAtil cuando se tienen pocos puntos y se requiere precisi\\xF3n.\"}):/*#__PURE__*/_jsx(_Fragment,{children:\"El m\\xE9todo de m\\xEDnimos cuadrados encuentra el polinomio que mejor ajusta a los puntos en el sentido de minimizar la suma de los cuadrados de los errores. Ideal para datos con ruido.\"})})]})]});};export default Interpolation;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Interpolation","method","setMethod","points","setPoints","x","y","result","setResult","handlePointChange","index","field","value","newPoints","parseFloat","addPoint","removePoint","length","filter","_","i","calculateInterpolation","newtonDividedDifferences","leastSquares","error","alert","message","n","dividedDiff","Array","map","fill","j","polynomial","toString","term","concat","coefficients","degree","Math","min","X","p","row","push","pow","XtX","Xty","reduce","sum","k","gaussianElimination","c","toFixed","join","matrix","vector","maxRow","abs","factor","solution","className","children","onChange","e","target","onClick","point","type","coef"],"sources":["C:/Universidad/proyectos/Calculadora-ALG-2-/src/components/Interpolation.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Interpolation = () => {\n  const [method, setMethod] = useState('newton');\n  const [points, setPoints] = useState([\n    {x: 0, y: 1}, \n    {x: 1, y: 4}, \n    {x: 2, y: 9}\n  ]);\n  const [result, setResult] = useState(null);\n\n  const handlePointChange = (index, field, value) => {\n    const newPoints = [...points];\n    newPoints[index][field] = parseFloat(value) || 0;\n    setPoints(newPoints);\n  };\n\n  const addPoint = () => {\n    setPoints([...points, {x: 0, y: 0}]);\n  };\n\n  const removePoint = (index) => {\n    if (points.length > 2) {\n      const newPoints = points.filter((_, i) => i !== index);\n      setPoints(newPoints);\n    }\n  };\n\n  const calculateInterpolation = () => {\n    try {\n      if (method === 'newton') {\n        setResult(newtonDividedDifferences());\n      } else {\n        setResult(leastSquares());\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  const newtonDividedDifferences = () => {\n    const n = points.length;\n    const dividedDiff = [...Array(n)].map(() => Array(n).fill(0));\n    \n    for (let i = 0; i < n; i++) {\n      dividedDiff[i][0] = points[i].y;\n    }\n    \n    for (let j = 1; j < n; j++) {\n      for (let i = 0; i < n - j; i++) {\n        dividedDiff[i][j] = (dividedDiff[i+1][j-1] - dividedDiff[i][j-1]) / \n                          (points[i+j].x - points[i].x);\n      }\n    }\n    \n    let polynomial = dividedDiff[0][0].toString();\n    let term = '';\n    \n    for (let i = 1; i < n; i++) {\n      term += `(x - ${points[i-1].x})`;\n      polynomial += ` + ${dividedDiff[0][i]}${term}`;\n    }\n    \n    return {\n      method: 'Diferencias Divididas de Newton',\n      polynomial,\n      coefficients: dividedDiff[0],\n      points: [...points]\n    };\n  };\n\n  const leastSquares = () => {\n    const n = points.length;\n    const degree = Math.min(3, n - 1);\n    \n    const X = points.map(p => {\n      const row = [];\n      for (let i = 0; i <= degree; i++) {\n        row.push(Math.pow(p.x, i));\n      }\n      return row;\n    });\n    \n    const y = points.map(p => p.y);\n    \n    const XtX = [...Array(degree + 1)].map(() => Array(degree + 1).fill(0));\n    const Xty = Array(degree + 1).fill(0);\n    \n    for (let i = 0; i <= degree; i++) {\n      for (let j = 0; j <= degree; j++) {\n        XtX[i][j] = points.reduce((sum, p, k) => sum + X[k][i] * X[k][j], 0);\n      }\n      Xty[i] = points.reduce((sum, p, k) => sum + X[k][i] * y[k], 0);\n    }\n    \n    const coefficients = gaussianElimination(XtX, Xty);\n    \n    let polynomial = coefficients.map((c, i) => {\n      return `${c.toFixed(4)}${i > 0 ? `x^${i}` : ''}`;\n    }).join(' + ');\n    \n    return {\n      method: 'MÃ­nimos Cuadrados',\n      polynomial,\n      coefficients,\n      points: [...points],\n      degree\n    };\n  };\n\n  const gaussianElimination = (matrix, vector) => {\n    const n = matrix.length;\n    for (let i = 0; i < n; i++) {\n      let maxRow = i;\n      for (let j = i + 1; j < n; j++) {\n        if (Math.abs(matrix[j][i]) > Math.abs(matrix[maxRow][i])) {\n          maxRow = j;\n        }\n      }\n      [matrix[i], matrix[maxRow]] = [matrix[maxRow], matrix[i]];\n      [vector[i], vector[maxRow]] = [vector[maxRow], vector[i]];\n      \n      for (let j = i + 1; j < n; j++) {\n        const factor = matrix[j][i] / matrix[i][i];\n        for (let k = i; k < n; k++) {\n          matrix[j][k] -= factor * matrix[i][k];\n        }\n        vector[j] -= factor * vector[i];\n      }\n    }\n    \n    const solution = Array(n).fill(0);\n    for (let i = n - 1; i >= 0; i--) {\n      solution[i] = vector[i];\n      for (let j = i + 1; j < n; j++) {\n        solution[i] -= matrix[i][j] * solution[j];\n      }\n      solution[i] /= matrix[i][i];\n    }\n    \n    return solution;\n  };\n\n  return (\n    <div className=\"bg-gray-800 p-6 rounded-xl shadow-md text-white relative z-10\">\n      <h3 className=\"text-xl font-semibold mb-4 text-purple-400\">InterpolaciÃ³n Polinomial</h3>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n        <div>\n          <label className=\"block text-gray-300 mb-2\">MÃ©todo</label>\n          <select\n            value={method}\n            onChange={(e) => setMethod(e.target.value)}\n            className=\"w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\n          >\n            <option value=\"newton\">Diferencias Divididas (Newton)</option>\n            <option value=\"leastSquares\">MÃ­nimos Cuadrados</option>\n          </select>\n        </div>\n        <div>\n          <button\n            onClick={addPoint}\n            className=\"mt-6 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n          >\n            AÃ±adir Punto\n          </button>\n        </div>\n      </div>\n\n      <div className=\"mb-4\">\n        <label className=\"block text-gray-300 mb-2\">Puntos (x, y)</label>\n        <div className=\"space-y-2\">\n          {points.map((point, index) => (\n            <div key={index} className=\"flex items-center space-x-2\">\n              <input\n                type=\"number\"\n                value={point.x}\n                onChange={(e) => handlePointChange(index, 'x', e.target.value)}\n                className=\"w-20 px-2 py-1 bg-gray-700 border border-gray-600 rounded\"\n              />\n              <input\n                type=\"number\"\n                value={point.y}\n                onChange={(e) => handlePointChange(index, 'y', e.target.value)}\n                className=\"w-20 px-2 py-1 bg-gray-700 border border-gray-600 rounded\"\n              />\n              <button\n                onClick={() => removePoint(index)}\n                className=\"px-2 py-1 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n              >\n                Eliminar\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <button\n        onClick={calculateInterpolation}\n        className=\"px-6 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors\"\n      >\n        Calcular InterpolaciÃ³n\n      </button>\n\n      {result && (\n        <div className=\"mt-6 p-4 bg-gray-700 rounded-lg\">\n          <h4 className=\"text-lg font-semibold mb-2 text-purple-400\">Resultados:</h4>\n          <p className=\"mb-2\">MÃ©todo: {result.method}</p>\n          <p className=\"mb-2\">Polinomio: {result.polynomial}</p>\n          \n          {result.coefficients && (\n            <div className=\"mt-2\">\n              <p className=\"font-medium mb-1\">Coeficientes:</p>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n                {result.coefficients.map((coef, i) => (\n                  <div key={i} className=\"bg-gray-800 p-2 rounded\">\n                    a<sub>{i}</sub> = {coef.toFixed(6)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      <div className=\"mt-6 p-4 bg-gray-700 rounded-lg\">\n        <h4 className=\"font-medium text-purple-400 mb-2\">ExplicaciÃ³n del MÃ©todo</h4>\n        <p className=\"text-gray-300\">\n          {method === 'newton' ? (\n            <>\n              El mÃ©todo de diferencias divididas de Newton construye un polinomio que pasa exactamente\n              por todos los puntos dados. Es Ãºtil cuando se tienen pocos puntos y se requiere precisiÃ³n.\n            </>\n          ) : (\n            <>\n              El mÃ©todo de mÃ­nimos cuadrados encuentra el polinomio que mejor ajusta a los puntos en el\n              sentido de minimizar la suma de los cuadrados de los errores. Ideal para datos con ruido.\n            </>\n          )}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Interpolation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}